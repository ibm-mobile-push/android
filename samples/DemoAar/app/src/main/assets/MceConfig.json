{
  "Please note: if you are in Europe, you may need to change the value in 'baseUrl' below to": "https://sdk6.ibm.xtify.com",
  "baseUrl": "https://sdk8.ibm.xtify.com",

  "appKey": {
    "prod":"YOUR APP KEY"
  },
  "Set this to the google project number if you are using GCM or to an empty string if you are using FCM": "",
  "senderId": "YOUR GCM PROJECT ID",

  "Use 'gcm' for GCM or 'fcm' for FCM": "",
  "messagingService": "fcm",

  "Will invalidate the existing user/channel ID if they exist when set to true": "This is for testing only. Do not ship with this set to true unless you understand what you are doing",
  "invalidateExistingUser": false,

  "Set this to false if you want MceApplication.init call to initiate the sdk only if the sdk was initiated before. This should be used by those who want to control the timing the first sdk initiation and not to let it happen automatically on application onCreate. For sdk initiation for the first time, use MceApplication.firstInit": "true for automatic init, false for first init on firstInit call",
  "autoInitialize": true,

  "Will automatically reinitialize sdk after user deletion": "true for auto reinitialize, false for manual reinitialize",
  "autoReinitialize": true,

  "Setting sessionEnabled to true will trigger session start and session end events": "",
  "sessionsEnabled": true,

  "sessionTimeout is the number of minutes the SDK waits while the application is in the background before sending session end event": "",
  "sessionTimeout": 20,

  "metricTimeInterval defines the interval (in minutes) that SDK events sync with the server.": "",
  "metricTimeInterval": 3,

  "Set groupNotificationsByAttribution to true to bundle together notifications with the same attribution": "This will work on Android N and above",
  "groupNotificationsByAttribution": false,

  "Choose one of the following values for loglevel: ": ["none", "error", "warn", "info", "debug", "verbose"],
  "loglevel": "error",

  "Please note, the log iteration files will be stored under": "<application cache folder on sdcard>/ibm-mce-android-sdk/logs/<installation time folder, format: yyyy-MM-dd-HH-mm-ss>",
  "logfile": false,

  "The number of log iteration files": "After reaching this number, the log files will be overwritten in order",
  "logIterations": 1,

  "The number of hours each log iteration will hold": "0 is for infinite time",
  "logIterationDurationInHours": 0,

  "The number of log lines that will be stored in a RAM buffer before writing to the log file": "The higher this number is, more log lines will be lost in case of a crash.",
  "logBufferSize": 10,

  "Set useInMemoryImageCache to true to use RAM cache for inbox images": "",
  "useInMemoryImageCache": true,

  "Set useFileImageCache to true to use file based cache for inbox images": "Uses the sdcard application cache folder",
  "useFileImageCache": true,

  "The size of the inbox images RAM cache in MB": "",
  "inMemoryImageCacheCapacityInMB": 20,

  "The size of the inbox images file based cache in MB": "",
  "fileImageCacheCapacityInMB": 100,

  "location is only required if location support is needed. Please note that unlike iOS, location support is not enabled automatically. Enabling location support is done in the application code (see documentation).": "",
  "location": {
    "The sync key is only used to customize the iBeacon and Geofence syncing service, it is not required for those features": "",
    "sync": {
      "Specify how long to wait before syncing again on significant location change in seconds, default 5 minutes":"",
      "syncInterval": 300,

      "Location Sync radius is in meters, default 100km":"",
      "syncRadius": 100000,

      "Specify how long to wait before retrieving a new location from the device, default 5 minutes":"",
      "locationResponsiveness": 300,

      "Specify the minimum results when looking for locations nearby, default is 1, minimum value is 1":"",
      "minLocationsForSearch": 1,

      "Specify the maximum results when looking for locations nearby, default is 20, minimum value is 1":"",
      "maxLocationsForSearch": 20,

      "Specify the location providers that will be used to retrieve the device location. 'gps' - gps location. 'network' - wifi + cellular, default is gps + network":"",
      "providerPreferences": ["gps", "network"]
    },

    "Please note, unlike iOS, the existence of the ibeacon key does not enable iBeacon support, iBeacon support is enabled only if iBeacons are nearby":"",
    "ibeacon": {

      "Please note: if this is not set, iBeacon events will not be sent": "This value should never be empty. Leave the default value if you don't want to use iBeacons",
      "uuid": "YOUR-IBEACONS-UUID",

      "Specify how much time the sdk will scan for iBeacons in every scan session while the application is in the foreground, default is 5 seconds": "",
      "beaconForegroundScanDuration": 5,

      "Specify how much time the sdk will wait between iBeacons scan sessions while the application is in the foreground, default is 30 seconds": "",
      "beaconForegroundScanInterval": 30,

      "Specify how much time the sdk will scan for iBeacons in every scan session while the application is in the background, default is 30 seconds": "",
      "beaconBackgroundScanDuration": 30,

      "Specify how much time the sdk will wait between iBeacons scan sessions while the application is in the background, default is 5 minutes": "",
      "beaconBackgroundScanInterval": 300
    }
  },

  "This section is for database configuration": "",
  "database": {
    "This defines the sdk database implementation.": "If this is not defined, the default sdk database (android sqlite) will be set",
    "impl": "com.ibm.mce.sdk.db.android.AndroidDatabaseImpl",
    "This defines the sdk database will be encrypted": "The default sdk database does not support encryption so this can be set to true only when using a ccustom database",
    "encrypted": false,
    "This defines the sdk encryption provider implementation.": "If this is not defined, the default sdk encryption provider (keystore based for Android 18 and above and weak encryption for Android 17 and below) will be set",
    "encryptionProvider": "com.ibm.mce.sdk.encryption.DefaultSdkEncryptionProvider",
    "This defines the sdk database secret key generator implementation.": "If this is not defined, the default sdk database secret key generator (random uuid) will be set",
    "keyGenerator": "com.ibm.mce.sdk.db.DefaultSdkDatabaseSecretKeyGenerator",
    "This defines how many days to keep a database key before replacing it": "minimum value is 1",
    "keyRotationIntervalInDays": 30
  }
}